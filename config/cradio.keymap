/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk { ignore-modifiers; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };

        control_space: control_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "CONTROL_SPACE";
        };

        control_tab: control_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(TAB)>;
            label = "CONTROL_TAB";
        };

        command_shift_p: control_p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(RG(P))>;
            label = "CONTROL_P";
        };

        cmd_alt_i: cmd_alt_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(I))>;
            label = "CMD_ALT_I";
        };

        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(S)>;
            label = "SAVE";
        };

        layer_hold: layer_hold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&mo 5>, <&macro_press>, <&kp LEFT_GUI>;

            label = "LAYER_HOLD";
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&mo 6>;
        };

        // internal-left & external-right thumb keys
        // both left thumb keys

        combo_settings {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&mo 6>;
        };

        layer_4 {
            bindings = <&mo 4>;
            key-positions = <29 33>;
        };

        layer_3 {
            bindings = <&mo 3>;
            key-positions = <33 19>;
        };

        layer_2_left {
            bindings = <&mo 2>;
            key-positions = <30 12>;
        };

        layer_3_left {
            bindings = <&mo 3>;
            key-positions = <30 11>;
        };

        layer_4_left {
            bindings = <&mo 4>;
            key-positions = <30 21>;
        };

        control_p {
            bindings = <&command_shift_p>;
            key-positions = <16 9>;
        };

        cmd_alt_i {
            bindings = <&cmd_alt_i>;
            key-positions = <30 10>;
        };

        command_tab {
            bindings = <&layer_hold>;
            key-positions = <30 0>;
        };
    };

    behaviors {
        layer_key: layer_key {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_KEY";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };

        left_homerow: left_homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
            require-prior-idle-ms = <50>;
        };

        right_homerow: right_homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
            require-prior-idle-ms = <50>;
        };

        layer_save: layer_save {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SAVE";
            bindings = <&mo>, <&save>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q                     &kp W                     &kp E                       &kp R                         &kp T               &kp Y                  &kp U                           &kp I                         &kp O                       &kp P
&left_homerow LEFT_ALT A  &left_homerow LEFT_GUI S  &left_homerow LEFT_SHIFT D  &left_homerow LEFT_CONTROL F  &kp G               &kp H                  &right_homerow RIGHT_CONTROL J  &right_homerow RIGHT_SHIFT K  &right_homerow RIGHT_GUI L  &right_homerow RIGHT_ALT SEMI
&kp Z                     &kp X                     &kp C                       &left_homerow LEFT_GUI V      &kp B               &kp N                  &kp M                           &kp COMMA                     &kp DOT                     &kp SLASH
                                                                                &mo 1                         &mt LSHIFT SPACE    &mt RIGHT_SHIFT ENTER  &layer_key 2 SPACE
            >;
        };

        move_layer {
            bindings = <
&kp TAB         &kp LEFT_GUI     &kp LC(C)  &kp BACKSPACE   &control_tab     &kp TAB         &kp BACKSPACE  &kp EQUAL     &kp PLUS   &kp DOUBLE_QUOTES
&sk LALT        &layer_save 3 0  &mo 2      &control_space  &kp LC(A)        &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &mo 4            &kp LG(C)  &kp LG(V)       &kp LS(LG(F))    &kp BACKSLASH   &kp AMPS       &kp GRAVE     &kp TILDE  &kp BACKSPACE
                                            &trans          &trans           &kp BACKSPACE   &kp ENTER
            >;
        };

        coding_layer {
            bindings = <
&kp ESCAPE  &kp NUMBER_1  &kp N2        &kp NUMBER_3       &kp TAB      &kp EXCL             &kp EQUAL                       &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS            &kp BACKSPACE
&kp CAPS    &kp NUMBER_4  &kp NUMBER_5  &mt LEFT_SHIFT N6  &kp COMMA    &mt RIGHT_ALT MINUS  &mt RIGHT_CONTROL GREATER_THAN  &mt RIGHT_SHIFT LEFT_BRACE  &right_homerow RGUI RIGHT_BRACE  &mo 3
&kp LSHFT   &kp N7        &kp N8        &kp N9             &kp N0       &kp UNDER            &kp LESS_THAN                   &kp LEFT_BRACKET            &kp RIGHT_BRACKET                &mo 4
                                        &to 0              &trans       &trans               &trans
            >;
        };

        number_layer {
            bindings = <
&kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PERCENT    &kp CARET     &kp AMPS  &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7    &kp N8    &kp N9                &kp DOUBLE_QUOTES
&none         &none         &trans        &trans        &trans         &none         &none     &none     &none                 &trans
                                          &sl 3         &none          &none         &none
            >;
        };

        config_layer {
            bindings = <
&kp F1             &kp F2      &kp F3          &kp F4      &kp F5      &kp F6          &kp F7        &kp F8        &kp F9        &kp F10
&kp LC(LA(LG(A)))  &trans      &sk LEFT_GUI    &sk LCTRL   &kp RALT    &kp LEFT_ARROW  &kp DOWN      &kp UP_ARROW  &kp RIGHT     &trans
&bootloader        &bt BT_CLR  &bt BT_CLR_ALL  &bt BT_NXT  &none       &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                                               &to 0       &none       &none           &none
            >;
        };

        accent_layer {
            bindings = <
&none   &kp TAB  &none   &trans  &none     &none  &none  &none  &none  &none
&trans  &trans   &trans  &trans  &trans    &none  &none  &none  &none  &none
&none   &none    &none   &trans  &none     &none  &none  &none  &none  &none
                         &to 0   &none     &none  &none
            >;
        };

        settings_layer {
            bindings = <
&bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none        &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none     &none  &none
&none        &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none     &none  &none
                           &none       &none           &none         &none
            >;
        };
    };
};
